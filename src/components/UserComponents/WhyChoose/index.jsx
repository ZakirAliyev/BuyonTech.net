import { useEffect, useRef, useState } from "react";
import './index.scss';
import { TbUserCheck } from "react-icons/tb";
import { useNavigate } from "react-router";
import { useTranslation } from "react-i18next";

function WhyChoose() {
    const { t } = useTranslation();


    const cards = t("siteRoot.homePage.whyChooseSection.cards", { returnObjects: true }) || [];
    const title = t("siteRoot.homePage.whyChooseSection.title");
    const buttonText = t("siteRoot.homePage.whyChooseSection.button");

    const cardCount = cards.length;

    const [sectionHeight, setSectionHeight] = useState(window.innerHeight);

    useEffect(() => {
        const cardHeight = 440;
        setSectionHeight(window.innerHeight + cardCount * cardHeight + 200);

        const cards = document.querySelectorAll(".card");
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    if (entry.isIntersecting) {
                        entry.target.classList.add("reveal");
                    }
                });
            },
            { threshold: 0.2 }
        );

        cards.forEach((card) => observer.observe(card));

        return () => observer.disconnect();
    }, [cardCount]);

    const centerContentRef = useRef(null);
    const sectionRef = useRef(null);

    useEffect(() => {
        const sectionNode = sectionRef.current;
        const centerNode = centerContentRef.current;

        if (!sectionNode || !centerNode) {
            return undefined;
        }

        const observer = new IntersectionObserver(([entry]) => {
            if (entry.isIntersecting) {
                requestAnimationFrame(() => {
                    centerNode.classList.add("in-view");
                });
            } else {
                centerNode.classList.remove("in-view");
            }
        });

        observer.observe(sectionNode);

        return () => observer.disconnect();
    }, []);
    useEffect(() => {
        const section = sectionRef.current;
        const center = centerContentRef.current;
        if (!section || !center) return;

        const sentinel = document.createElement("div");
        sentinel.style.position = "absolute";
        sentinel.style.bottom = "0";
        sentinel.style.width = "100%";
        sentinel.style.height = "1px";
        section.appendChild(sentinel);

        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    const isMobile = window.innerWidth <= 992;
                    if (entry.isIntersecting) {
                        if (isMobile) {
                            center.classList.add("hideOnMobile");
                            center.classList.remove("addClassCard");
                        } else {
                            center.style.transition = `
                          transform 1.3s cubic-bezier(0.22, 1, 0.36, 1)
                               `;
                            center.style.willChange = "transform";
                            requestAnimationFrame(() => {
                                center.classList.add("addClassCard");
                                center.classList.remove("hideOnMobile");
                            });
                        }
                    } else {
                        center.classList.remove("addClassCard");
                        center.classList.remove("hideOnMobile");
                    }
                });
            },
            { threshold: 0.1, rootMargin: "0px 0px 110px 0px" }
        );

        observer.observe(sentinel);

        return () => {
            observer.disconnect();
            sentinel.remove();
        };
    }, []);



    const navigate = useNavigate()
    const handleClickLink = (navigator) => {
        navigate(navigator)
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        });
    }
    const icons = [


        `
  <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
<path fill-rule="evenodd" clip-rule="evenodd" d="M4 0.666667C4 0.489856 4.07024 0.320287 4.19526 0.195262C4.32029 0.070238 4.48986 0 4.66667 0H19.3333C19.5101 0 19.6797 0.070238 19.8047 0.195262C19.9298 0.320287 20 0.489856 20 0.666667V1.33333H23.3333C23.5101 1.33333 23.6797 1.40357 23.8047 1.5286C23.9298 1.65362 24 1.82319 24 2V6C24 6.88406 23.6488 7.7319 23.0237 8.35702C22.3986 8.98214 21.5507 9.33333 20.6667 9.33333H19.5447C18.5173 12.24 15.858 14.376 12.6667 14.6393V18.6667H17.3333C17.5101 18.6667 17.6797 18.7369 17.8047 18.8619C17.9298 18.987 18 19.1565 18 19.3333V23.3333C18 23.5101 17.9298 23.6797 17.8047 23.8047C17.6797 23.9298 17.5101 24 17.3333 24H6.66667C6.48986 24 6.32029 23.9298 6.19526 23.8047C6.07024 23.6797 6 23.5101 6 23.3333V19.3333C6 19.1565 6.07024 18.987 6.19526 18.8619C6.32029 18.7369 6.48986 18.6667 6.66667 18.6667H11.3333V14.6393C8.14267 14.376 5.48267 12.24 4.45533 9.33333H3.33333C2.44928 9.33333 1.60143 8.98214 0.976311 8.35702C0.351189 7.7319 0 6.88406 0 6V2C0 1.82319 0.070238 1.65362 0.195262 1.5286C0.320287 1.40357 0.489856 1.33333 0.666667 1.33333H4V0.666667ZM18.6667 6.66667V1.33333H5.33333V6.66667C5.33333 10.3487 8.318 13.3333 12 13.3333C15.682 13.3333 18.6667 10.3487 18.6667 6.66667ZM20 2.66667V8H20.6667C21.1971 8 21.7058 7.78929 22.0809 7.41421C22.456 7.03914 22.6667 6.53043 22.6667 6V2.66667H20ZM1.33333 2.66667H4V8H3.33333C2.8029 8 2.29419 7.78929 1.91912 7.41421C1.54405 7.03914 1.33333 6.53043 1.33333 6V2.66667ZM7.33333 20V22.6667H16.6667V20H7.33333Z" fill="#527FE9"/>
</svg>`,

        `
    <svg
      xmlns="http://www.w3.org/2000/svg"
      width="48"
      height="48"
      viewBox="0 0 26 26"
      fill="none"
      stroke="#527FE9"
      strokeWidth="1.5"
      strokeLinejoin="round"
      strokeLinecap="round"
    >
      <path d="M14.0357 1.09861C13.6441 0.870151 13.201 0.75 12.7501 0.75C12.2992 0.75 11.8561 0.870151 11.4645 1.09861L0.750122 7.34955L11.4645 13.6005C11.8561 13.829 12.2992 13.9491 12.7501 13.9491C13.201 13.9491 13.6441 13.829 14.0357 13.6005L24.7501 7.34955L14.0357 1.09861Z" />
      <path d="M0.750122 12.9505L10.1789 18.4519C10.9622 18.9088 11.8484 19.1491 12.7501 19.1491C13.6519 19.1491 14.5381 18.9088 15.3214 18.4519L24.7501 12.9505" />
      <path d="M0.750122 18.5514L10.1789 24.0528C10.9622 24.5097 11.8484 24.75 12.7501 24.75C13.6519 24.75 14.5381 24.5097 15.3214 24.0528L24.7501 18.5514" />
    </svg>
`,
        `
  <svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
<path d="M18.8304 12.7309L13.3049 10.6951L11.2691 5.16963C11.1654 4.8885 10.978 4.64592 10.7322 4.47458C10.4864 4.30324 10.1939 4.21138 9.89431 4.21138C9.59467 4.21138 9.30223 4.30324 9.05642 4.47458C8.8106 4.64592 8.62322 4.8885 8.51953 5.16963L6.48368 10.6951L0.958247 12.7309C0.677121 12.8346 0.434539 13.022 0.2632 13.2678C0.0918604 13.5136 0 13.8061 0 14.1057C0 14.4053 0.0918604 14.6978 0.2632 14.9436C0.434539 15.1894 0.677121 15.3768 0.958247 15.4805L6.48368 17.5163L8.51953 23.0418C8.62322 23.3229 8.8106 23.5655 9.05642 23.7368C9.30223 23.9081 9.59467 24 9.89431 24C10.1939 24 10.4864 23.9081 10.7322 23.7368C10.978 23.5655 11.1654 23.3229 11.2691 23.0418L13.3049 17.5163L18.8304 15.4805C19.1115 15.3768 19.3541 15.1894 19.5254 14.9436C19.6968 14.6978 19.7886 14.4053 19.7886 14.1057C19.7886 13.8061 19.6968 13.5136 19.5254 13.2678C19.3541 13.022 19.1115 12.8346 18.8304 12.7309ZM18.3935 14.2952L12.5954 16.4321C12.5096 16.4637 12.4316 16.5135 12.3669 16.5782C12.3022 16.643 12.2523 16.7209 12.2207 16.8068L10.0838 22.6049C10.0694 22.6436 10.0436 22.6769 10.0097 22.7005C9.97584 22.7241 9.93557 22.7367 9.89431 22.7367C9.85305 22.7367 9.81278 22.7241 9.77891 22.7005C9.74504 22.6769 9.71919 22.6436 9.70483 22.6049L7.56792 16.8068C7.53633 16.7209 7.48646 16.643 7.42176 16.5782C7.35705 16.5135 7.27906 16.4637 7.19317 16.4321L1.3951 14.2952C1.35642 14.2808 1.32306 14.255 1.29951 14.2211C1.27595 14.1872 1.26332 14.1469 1.26332 14.1057C1.26332 14.0644 1.27595 14.0242 1.29951 13.9903C1.32306 13.9564 1.35642 13.9306 1.3951 13.9162L7.19317 11.7793C7.27906 11.7477 7.35705 11.6978 7.42176 11.6331C7.48646 11.5684 7.53633 11.4904 7.56792 11.4046L9.70483 5.60649C9.71919 5.56781 9.74504 5.53445 9.77891 5.51089C9.81278 5.48733 9.85305 5.47471 9.89431 5.47471C9.93557 5.47471 9.97584 5.48733 10.0097 5.51089C10.0436 5.53445 10.0694 5.56781 10.0838 5.60649L12.2207 11.4046C12.2523 11.4904 12.3022 11.5684 12.3669 11.6331C12.4316 11.6978 12.5096 11.7477 12.5954 11.7793L18.3935 13.9162C18.4322 13.9306 18.4656 13.9564 18.4891 13.9903C18.5127 14.0242 18.5253 14.0644 18.5253 14.1057C18.5253 14.1469 18.5127 14.1872 18.4891 14.2211C18.4656 14.255 18.4322 14.2808 18.3935 14.2952ZM13.4734 3.15799C13.4734 2.99048 13.5399 2.82983 13.6584 2.71138C13.7768 2.59294 13.9375 2.52639 14.105 2.52639H15.9998V0.631598C15.9998 0.464088 16.0663 0.303438 16.1847 0.184991C16.3032 0.0665432 16.4638 0 16.6314 0C16.7989 0 16.9595 0.0665432 17.078 0.184991C17.1964 0.303438 17.263 0.464088 17.263 0.631598V2.52639H19.1577C19.3253 2.52639 19.4859 2.59294 19.6044 2.71138C19.7228 2.82983 19.7893 2.99048 19.7893 3.15799C19.7893 3.3255 19.7228 3.48615 19.6044 3.6046C19.4859 3.72305 19.3253 3.78959 19.1577 3.78959H17.263V5.68438C17.263 5.85189 17.1964 6.01254 17.078 6.13099C16.9595 6.24944 16.7989 6.31598 16.6314 6.31598C16.4638 6.31598 16.3032 6.24944 16.1847 6.13099C16.0663 6.01254 15.9998 5.85189 15.9998 5.68438V3.78959H14.105C13.9375 3.78959 13.7768 3.72305 13.6584 3.6046C13.5399 3.48615 13.4734 3.3255 13.4734 3.15799ZM24 8.21078C24 8.37829 23.9335 8.53893 23.815 8.65738C23.6966 8.77583 23.5359 8.84237 23.3684 8.84237H22.3157V9.89504C22.3157 10.0625 22.2492 10.2232 22.1307 10.3416C22.0123 10.4601 21.8517 10.5266 21.6841 10.5266C21.5166 10.5266 21.356 10.4601 21.2375 10.3416C21.1191 10.2232 21.0525 10.0625 21.0525 9.89504V8.84237H19.9999C19.8324 8.84237 19.6717 8.77583 19.5533 8.65738C19.4348 8.53893 19.3683 8.37829 19.3683 8.21078C19.3683 8.04327 19.4348 7.88262 19.5533 7.76417C19.6717 7.64572 19.8324 7.57918 19.9999 7.57918H21.0525V6.52651C21.0525 6.359 21.1191 6.19835 21.2375 6.07991C21.356 5.96146 21.5166 5.89492 21.6841 5.89492C21.8517 5.89492 22.0123 5.96146 22.1307 6.07991C22.2492 6.19835 22.3157 6.359 22.3157 6.52651V7.57918H23.3684C23.5359 7.57918 23.6966 7.64572 23.815 7.76417C23.9335 7.88262 24 8.04327 24 8.21078Z" fill="#527FE9"/>
</svg>
  `,
        `
<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
<path d="M15.78 10.03C15.8537 9.96134 15.9128 9.87854 15.9538 9.78654C15.9948 9.69454 16.0168 9.59523 16.0186 9.49452C16.0204 9.39382 16.0018 9.29379 15.9641 9.2004C15.9264 9.10702 15.8703 9.02218 15.799 8.95096C15.7278 8.87974 15.643 8.8236 15.5496 8.78588C15.4562 8.74816 15.3562 8.72963 15.2555 8.73141C15.1548 8.73319 15.0555 8.75523 14.9635 8.79622C14.8715 8.83721 14.7887 8.89631 14.72 8.97L11.25 12.44L9.78 10.97C9.63782 10.8375 9.44978 10.7654 9.25548 10.7688C9.06118 10.7723 8.87579 10.851 8.73838 10.9884C8.60097 11.1258 8.52225 11.3112 8.51882 11.5055C8.5154 11.6998 8.58752 11.8878 8.72 12.03L11.25 14.56L15.78 10.03Z" fill="#527FE9"/>
<path d="M13.04 1.56C12.3637 1.33134 11.631 1.33169 10.955 1.561L4.17899 3.856C3.68082 4.02191 3.2421 4.32998 2.91692 4.74223C2.59174 5.15449 2.39431 5.65289 2.34899 6.176C1.99599 10.586 2.58899 14.052 4.18699 16.769C5.78999 19.494 8.34599 21.367 11.722 22.698C11.8987 22.7676 12.0953 22.7676 12.272 22.698C15.651 21.367 18.208 19.494 19.812 16.769C21.412 14.052 22.004 10.585 21.652 6.177C21.6066 5.65377 21.409 5.15528 21.0837 4.74302C20.7583 4.33075 20.3193 4.02275 19.821 3.857L13.04 1.56ZM11.436 2.982C11.7999 2.85886 12.1941 2.85886 12.558 2.982L19.34 5.277C19.802 5.433 20.12 5.838 20.157 6.296C20.494 10.522 19.909 13.647 18.519 16.008C17.175 18.293 15.023 19.954 11.997 21.192C8.97399 19.954 6.82399 18.293 5.47999 16.008C4.08999 13.648 3.50599 10.522 3.84299 6.296C3.8648 6.06481 3.95377 5.84506 4.09894 5.66381C4.24411 5.48257 4.43914 5.34776 4.65999 5.276L11.436 2.982Z" fill="#527FE9"/>
</svg>
`,
        `
<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
<g clip-path="url(#clip0_1_27)">
<path d="M20.8788 0H22.1332C22.6281 -8.07975e-08 23.1028 0.196519 23.4529 0.546355C23.8029 0.896192 23.9997 1.37071 24 1.86559V3.12106C24.0008 6.0448 22.8847 8.85842 20.8798 10.9866L19.5699 12.3776C19.0281 12.9518 18.46 13.5006 17.8674 14.0224V19.3962C17.8674 20.0522 17.5229 20.6591 16.9607 20.9962L12.1455 23.8858C12.0362 23.9515 11.9128 23.99 11.7855 23.9983C11.6583 24.0066 11.5309 23.9843 11.414 23.9334C11.2971 23.8825 11.1941 23.8043 11.1135 23.7055C11.0329 23.6067 10.9771 23.49 10.9508 23.3653L9.92354 18.4885C9.87047 18.4463 9.82055 18.4003 9.7742 18.3509L7.7773 16.224L5.65025 14.2261C5.6008 14.1797 5.55481 14.1298 5.51265 14.0768L0.636663 13.0496C0.511712 13.0235 0.394811 12.9679 0.295724 12.8875C0.196636 12.807 0.118239 12.704 0.0670777 12.5871C0.0159169 12.4701 -0.00652177 12.3427 0.00163564 12.2153C0.00979304 12.0879 0.0483097 11.9644 0.113969 11.8549L3.00478 7.03998C3.34187 6.47785 3.94883 6.13332 4.60487 6.13332H9.97794C10.4997 5.54152 11.0486 4.97416 11.6228 4.43305L13.0138 3.12106C15.1415 1.11644 17.9544 2.10248e-05 20.8777 0H20.8788ZM14.1115 4.28585L12.7205 5.59679C11.4115 6.83036 10.2467 8.2084 9.24831 9.70451L6.90899 13.2138L8.89202 15.0741L8.92829 15.1104L10.7876 17.0922L14.295 14.7541C15.7924 13.7553 17.1716 12.5898 18.4061 11.28L19.716 9.89011C21.4414 8.05863 22.4019 5.6372 22.401 3.12106V1.86666C22.401 1.79594 22.3729 1.72811 22.3229 1.6781C22.2729 1.62809 22.205 1.6 22.1343 1.6H20.8788C18.3631 1.59992 15.9424 2.56067 14.1115 4.28585ZM6.13455 21.5999C4.84488 22.8895 1.97326 23.1413 1.07509 23.1893C1.03988 23.1912 1.00466 23.1859 0.971619 23.1736C0.938579 23.1613 0.908434 23.1423 0.883075 23.1178C0.858584 23.0924 0.839594 23.0623 0.827295 23.0293C0.814997 22.9962 0.809655 22.961 0.811605 22.9258C0.859607 22.0277 1.11135 19.1562 2.40102 17.8666C3.36107 16.9066 5.1745 16.9066 6.13455 17.8666C7.0946 18.8266 7.0946 20.6399 6.13455 21.5999ZM5.50305 12.4394L7.91597 8.81811C8.16203 8.44904 8.41698 8.08744 8.68081 7.73331H4.60487C4.55892 7.73334 4.51376 7.74524 4.47377 7.76785C4.43377 7.79046 4.4003 7.82302 4.37659 7.86238L2.065 11.7152L5.50305 12.4394ZM16.2684 15.3194C15.9128 15.584 15.5509 15.8392 15.1825 16.0853L11.5631 18.4981L12.2863 21.9359L16.1393 19.6245C16.1787 19.6008 16.2112 19.5673 16.2339 19.5273C16.2565 19.4873 16.2684 19.4422 16.2684 19.3962V15.3194ZM17.8685 7.73331C17.8684 7.9435 17.8269 8.15161 17.7464 8.34577C17.6659 8.53993 17.548 8.71633 17.3993 8.8649C17.2506 9.01347 17.0741 9.13131 16.8799 9.21168C16.6857 9.29205 16.4775 9.33338 16.2673 9.33331C16.0571 9.33324 15.849 9.29177 15.6548 9.21127C15.4607 9.13077 15.2843 9.01282 15.1357 8.86415C14.9871 8.71548 14.8693 8.53899 14.7889 8.34478C14.7085 8.15057 14.6672 7.94243 14.6673 7.73225C14.6674 7.30776 14.8362 6.90071 15.1364 6.60066C15.4367 6.3006 15.8439 6.13211 16.2684 6.13225C16.6929 6.13239 17.1 6.30115 17.4001 6.60141C17.7001 6.90167 17.8686 7.30883 17.8685 7.73331Z" fill="#527FE9"/>
</g>
<defs>
<clipPath id="clip0_1_27">
<rect width="24" height="24" fill="white"/>
</clipPath>
</defs>
</svg>
`,


        `
<svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" viewBox="0 0 24 24" fill="none">
<path d="M21.25 12C21.25 9.54675 20.2754 7.19397 18.5407 5.45926C16.806 3.72455 14.4533 2.75 12 2.75M21.25 12H2.75M21.25 12C21.25 14.4533 20.2754 16.806 18.5407 18.5407C16.806 20.2754 14.4533 21.25 12 21.25M12 2.75C9.54675 2.75 7.19397 3.72455 5.45926 5.45926C3.72455 7.19397 2.75 9.54675 2.75 12M12 2.75C11.5 2.75 8 6.891 8 12C8 17.109 11.5 21.25 12 21.25M12 2.75C12.5 2.75 16 6.891 16 12C16 17.109 12.5 21.25 12 21.25M2.75 12C2.75 14.4533 3.72455 16.806 5.45926 18.5407C7.19397 20.2754 9.54675 21.25 12 21.25" stroke="#527FE9" strokeWidth="1.5" strokeLinecap="round" strokeLinejoin="round"/>
</svg>
`
    ];

    return (
        <div style={{ background: 'var(--bg-color)', width: '100%', position: 'relative', zIndex: '10' }}>
            <div className="container" style={{ maxWidth: "1200px" }}>
                <section id="whyChoose" ref={sectionRef} style={{ minHeight: sectionHeight }}>
                    <div className="centerContent" ref={centerContentRef}>
                        <h2>{title}</h2>
                        <button onClick={() => {
                            handleClickLink('/contact')
                        }}>      {buttonText}</button>
                    </div>

                    <div className="cards">
                        {/* {[...Array(cardCount)].map((_, i) => (
                            <div
                                key={i}
                                className={`card card-${i + 1} ${i % 2 === 0 ? "left" : "right"}`}
                            >
                                <div className="icon">
                                    <TbUserCheck />
                                </div>
                                <h3>Strong Expertise</h3>
                                <p>
                                    Our team brings years of experience to deliver
                                    reliable and innovative solutions.
                                </p>
                            </div>
                        ))} */}

                        {cards.map((card, i) => (
                            <div
                                key={i}
                                className={`card card-${i + 1} ${i % 2 === 0 ? "left" : "right"}`}
                            >
                                <div
                                    className="icon"
                                    dangerouslySetInnerHTML={{ __html: icons[i] }}
                                />
                                <h3>{card.title}</h3>
                                <p>{card.description}</p>
                            </div>
                        ))}
                    </div>
                    <div className="choseBtn">
                        <button onClick={() => {
                            handleClickLink('/contact')
                        }}>
                            {buttonText}
                        </button>
                    </div>
                </section>
            </div>
        </div>
    );
}

export default WhyChoose;
